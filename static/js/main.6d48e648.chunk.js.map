{"version":3,"sources":["Components/Movie.js","routes/Home.js","routes/Detail.js","Components/App.js","apollo.js","index.js"],"names":["Container","styled","div","props","bgUrl","id","to","GET_MOVIES","gql","TitleContainer","Title","MoviesContainer","useQuery","loading","error","data","console","log","movies","map","m","Movie","key","medium_cover_image","GET_MOVIE","PosterContainer","SuggestionContainer","useParams","parseInt","variables","movie","title","rating","language","description_full","color","style","fontSize","marginBottom","marginTop","suggestions","ResetStyle","createGlobalStyle","App","exact","path","component","Home","Detail","client","ApolloClient","uri","defaultOptions","watchQuery","fetchPolicy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2uBAIA,IAAMA,EAAYC,IAAOC,IAAV,KAOW,SAACC,GAAD,OAAWA,EAAMC,SAS5B,cAAoB,IAAjBC,EAAgB,EAAhBA,GAAID,EAAY,EAAZA,MACpB,OACE,kBAAC,IAAD,CAAME,GAAE,WAAMD,IACZ,kBAACL,EAAD,CAAWI,MAAOA,M,8xCCjBxB,IAAMG,EAAaC,YAAH,KASVR,EAAYC,IAAOC,IAAV,KAQTO,EAAiBR,IAAOC,IAAV,KAcdQ,EAAQT,IAAOC,IAAV,KAiBLS,EAAkBV,IAAOC,IAAV,KAWN,aAAO,IAAD,EACcU,YAASL,GAAlCM,EADW,EACXA,QAASC,EADE,EACFA,MAAOC,EADL,EACKA,KAExB,OADAC,QAAQC,IAAIJ,EAASC,EAAOC,GAE1B,kBAAC,EAAD,KACE,kBAACN,EAAD,KACE,kBAACC,EAAD,KACGG,EACC,8CAEA,oCACE,6CACA,sEAKR,kBAACF,EAAD,KACGI,GACCA,EAAKG,QACLH,EAAKG,OAAOC,KAAI,SAACC,GAAD,OACd,kBAACC,EAAD,CAAOC,IAAKF,EAAEf,GAAIA,GAAIe,EAAEf,GAAID,MAAOgB,EAAEG,2B,kuDC5EjD,IAAMC,EAAYhB,YAAH,KAkBTR,EAAYC,IAAOC,IAAV,KAcTO,EAAiBR,IAAOC,IAAV,KASdQ,EAAQT,IAAOC,IAAV,KAsBLuB,EAAkBxB,IAAOC,IAAV,KAIK,SAACC,GAAD,OAAWA,EAAMC,SAMrCsB,EAAsBzB,IAAOC,IAAV,KAUV,aAAO,IACdG,EAAOsB,cAAPtB,GACNA,EAAKuB,SAASvB,GAFK,MAGOO,YAASY,EAAW,CAC5CK,UAAW,CAAExB,QADPQ,EAHW,EAGXA,QAASE,EAHE,EAGFA,KAIjB,OADAC,QAAQC,IAAIF,GAEV,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGF,EACC,8CAEAE,GACAA,EAAKe,OACH,oCACE,4BAAKf,EAAKe,MAAMC,OAChB,4BACGhB,EAAKe,MAAME,OADd,MACyBjB,EAAKe,MAAMG,UAEpC,4BAAKlB,EAAKe,MAAMI,qBAKtBrB,GACA,wBACEsB,MAAM,QACNC,MAAO,CACLC,SAAU,OACVC,aAAc,OACdC,UAAW,OACXJ,MAAO,UANX,wBAYF,kBAACT,EAAD,MACIb,IAAD,OACCE,QADD,IACCA,OADD,EACCA,EAAMyB,YAAYrB,KAAI,SAACC,GAAD,OACpB,kBAACC,EAAD,CAAOC,IAAKF,EAAEf,GAAIA,GAAIe,EAAEf,GAAID,MAAOgB,EAAEG,2BAI5CR,GAAQA,EAAKe,OACZ,kBAACL,EAAD,CAAiBrB,MAAOW,EAAKe,MAAMP,wB,+lCCtI7C,IAAMkB,EAAaC,YAAH,KA0DDC,MAZf,WACE,OACE,oCACE,kBAACF,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,OAAOC,UAAWE,OChDvBC,EATA,IAAIC,IAAa,CAC9BC,IAAK,iCACLC,eAAgB,CACdC,WAAY,CACVC,YAAa,wB,QCCnBtC,QAAQC,IAAIgC,GAEZM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAgBR,OAAQA,GACtB,kBAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.6d48e648.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: center;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 2%;\r\n  -webkit-box-shadow: 7px 7px 5px 0px rgba(50, 50, 50, 0.75);\r\n  -moz-box-shadow: 7px 7px 5px 0px rgba(50, 50, 50, 0.75);\r\n  box-shadow: 7px 7px 5px 0px rgba(50, 50, 50, 0.75);\r\n`;\r\n\r\nexport default ({ id, bgUrl }) => {\r\n  return (\r\n    <Link to={`/${id}`}>\r\n      <Container bgUrl={bgUrl} />\r\n    </Link>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"Components/Movie\";\r\n\r\nconst GET_MOVIES = gql`\r\n  {\r\n    movies(limit: 100, minimum_rating: 1) {\r\n      id\r\n      medium_cover_image\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 30vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgb(208, 75, 161);\r\n  background: radial-gradient(\r\n    circle,\r\n    rgba(208, 75, 161, 1) 0%,\r\n    rgba(244, 99, 49, 1) 100%\r\n  );\r\n`;\r\nconst Title = styled.div`\r\n  width: 50%;\r\n  height: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h1 {\r\n    font-size: 50px;\r\n    margin-bottom: 15px;\r\n  }\r\n  h2 {\r\n    font-size: 35px;\r\n    font-style: italic;\r\n  }\r\n`;\r\nconst MoviesContainer = styled.div`\r\n  width: 80%;\r\n  height: 70vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: 250px;\r\n  grid-gap: 15px;\r\n  position: relative;\r\n  top: -50px;\r\n`;\r\n\r\nexport default () => {\r\n  const { loading, error, data } = useQuery(GET_MOVIES);\r\n  console.log(loading, error, data);\r\n  return (\r\n    <Container>\r\n      <TitleContainer>\r\n        <Title>\r\n          {loading ? (\r\n            <h1>Now Loading...</h1>\r\n          ) : (\r\n            <>\r\n              <h1>Apollo Movies</h1>\r\n              <h2>movie show app using graphql-apollo</h2>\r\n            </>\r\n          )}\r\n        </Title>\r\n      </TitleContainer>\r\n      <MoviesContainer>\r\n        {data &&\r\n          data.movies &&\r\n          data.movies.map((m) => (\r\n            <Movie key={m.id} id={m.id} bgUrl={m.medium_cover_image} />\r\n          ))}\r\n      </MoviesContainer>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"Components/Movie\";\r\n\r\n// 배울 것: data optional chain.\r\n// query getMovie 는 apollo를 위한 부분.\r\nconst GET_MOVIE = gql`\r\n  query movie($id: Int!) {\r\n    movie(id: $id) {\r\n      id\r\n      title\r\n      medium_cover_image\r\n      description_full\r\n      rating\r\n      language\r\n    }\r\n\r\n    suggestions(id: $id) {\r\n      id\r\n      medium_cover_image\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  background: rgb(208, 75, 161);\r\n  background: radial-gradient(\r\n    circle,\r\n    rgba(208, 75, 161, 1) 0%,\r\n    rgba(244, 99, 49, 1) 100%\r\n  );\r\n`;\r\nconst TitleContainer = styled.div`\r\n  width: 60%;\r\n  height: 70vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-self: center;\r\n`;\r\nconst Title = styled.div`\r\n  width: 100%;\r\n  height: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h1 {\r\n    font-size: 50px;\r\n    margin-bottom: 15px;\r\n  }\r\n  h2 {\r\n    font-size: 35px;\r\n    margin-bottom: 15px;\r\n  }\r\n  h3 {\r\n    font-size: 20px;\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\n\r\nconst PosterContainer = styled.div`\r\n  align-self: center;\r\n  width: 30%;\r\n  height: 60vh;\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 2%;\r\n`;\r\n\r\nconst SuggestionContainer = styled.div`\r\n  width: 80%;\r\n  height: 40%;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: 150px;\r\n  grid-auto-flow: row;\r\n  grid-gap: 15px;\r\n`;\r\n\r\nexport default () => {\r\n  let { id } = useParams();\r\n  id = parseInt(id);\r\n  const { loading, data } = useQuery(GET_MOVIE, {\r\n    variables: { id },\r\n  });\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TitleContainer>\r\n          <Title>\r\n            {loading ? (\r\n              <h1>Now loading...</h1>\r\n            ) : (\r\n              data &&\r\n              data.movie && (\r\n                <>\r\n                  <h1>{data.movie.title}</h1>\r\n                  <h2>\r\n                    {data.movie.rating} / {data.movie.language}\r\n                  </h2>\r\n                  <h3>{data.movie.description_full}</h3>\r\n                </>\r\n              )\r\n            )}\r\n          </Title>\r\n          {!loading && (\r\n            <h2\r\n              color=\"white\"\r\n              style={{\r\n                fontSize: \"28px\",\r\n                marginBottom: \"15px\",\r\n                marginTop: \"20px\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              Suggestion movies...\r\n            </h2>\r\n          )}\r\n          <SuggestionContainer>\r\n            {!loading &&\r\n              data?.suggestions.map((m) => (\r\n                <Movie key={m.id} id={m.id} bgUrl={m.medium_cover_image} />\r\n              ))}\r\n          </SuggestionContainer>\r\n        </TitleContainer>\r\n        {data && data.movie && (\r\n          <PosterContainer bgUrl={data.movie.medium_cover_image} />\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"routes/Home\";\r\nimport Detail from \"routes/Detail\";\r\n\r\nconst ResetStyle = createGlobalStyle`\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ResetStyle />\r\n      <Router>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/:id\" component={Detail} />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ApolloClient from \"apollo-boost\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://movieql.herokuapp.com/\",\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      fetchPolicy: \"cache-and-network\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"Components/App\";\r\nimport client from \"./apollo\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nconsole.log(client);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}